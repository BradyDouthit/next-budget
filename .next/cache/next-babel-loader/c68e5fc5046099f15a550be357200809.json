{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bradydouthit/Desktop/Projects/next-budget/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport BudgetItem from '../components/BudgetItem';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"addItem\", function (event) {\n      event.preventDefault(); //if parsed value from user is not a number\n\n      if (isNaN(parseFloat(_this.state.itemValue))) {\n        console.log(\"test\");\n      } else {\n        var itemArr = _this.state.budgetedItems;\n        itemArr.push({\n          name: _this.state.itemName,\n          monthlyCost: _this.state.itemValue\n        });\n\n        _this.getMonthlyTotal();\n\n        _this.setState({\n          budgetedItems: itemArr,\n          itemValue: '',\n          itemName: ''\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMonthlyTotal\", function () {\n      var monthlyTotal = 0;\n\n      _this.state.budgetedItems.map(function (item) {\n        monthlyTotal = monthlyTotal + parseFloat(item.monthlyCost);\n      });\n\n      _this.setState({\n        monthlyTotal: monthlyTotal\n      });\n    });\n\n    _this.state = {\n      budgetedItems: [],\n      itemValue: 0,\n      itemName: '',\n      monthlyTotal: 0,\n      errorMessage: ''\n    };\n    _this.handleValueChange = _this.handleValueChange.bind(_assertThisInitialized(_this));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"handleValueChange\",\n    value: function handleValueChange(event) {\n      this.setState({\n        itemValue: event.target.value\n      });\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      this.setState({\n        itemName: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, \"Next Budget\"), __jsx(\"form\", {\n        onSubmit: this.addItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"Name:\", __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Mortgage\",\n        value: this.state.itemName,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"Monthly Cost: $\", __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"1200\",\n        value: this.state.itemValue,\n        onChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      })), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, this.state.errorMessage)), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"Your monthly expenses:\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, this.state.budgetedItems.map(function (item, index) {\n        return __jsx(\"li\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, item.name, \": $\", item.monthlyCost);\n      })), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Monthly total: $\", this.state.monthlyTotal));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/bradydouthit/Desktop/Projects/next-budget/pages/index.js"],"names":["React","BudgetItem","Home","props","event","preventDefault","isNaN","parseFloat","state","itemValue","console","log","itemArr","budgetedItems","push","name","itemName","monthlyCost","getMonthlyTotal","setState","monthlyTotal","map","item","errorMessage","handleValueChange","bind","handleNameChange","target","value","addItem","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BudgetItem from '../components/BudgetItem';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            budgetedItems: [],\n            itemValue: 0,\n            itemName: '',\n            monthlyTotal: 0,\n            errorMessage: ''\n        }\n\n        this.handleValueChange = this.handleValueChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n    }\n\n    handleValueChange(event) {\n        this.setState({ itemValue: event.target.value });\n    }\n\n    handleNameChange(event) {\n        this.setState({ itemName: event.target.value });\n    }\n\n    addItem = (event) => {\n        event.preventDefault();\n        //if parsed value from user is not a number\n        if (isNaN(parseFloat(this.state.itemValue))) {\n            console.log(\"test\")\n        }\n        else {\n            let itemArr = this.state.budgetedItems;\n\n            itemArr.push({\n                name: this.state.itemName,\n                monthlyCost: this.state.itemValue\n            })\n\n            this.getMonthlyTotal();\n            this.setState({ budgetedItems: itemArr, itemValue: '', itemName: '' })\n        }\n    }\n\n    getMonthlyTotal = () => {\n        let monthlyTotal = 0;\n\n        this.state.budgetedItems.map(item => {\n            monthlyTotal = monthlyTotal + parseFloat(item.monthlyCost);\n        })\n\n        this.setState({ monthlyTotal: monthlyTotal })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Next Budget</h1>\n\n                <form onSubmit={this.addItem}>\n                    <label>\n                        Name:\n                        <input type=\"text\" placeholder=\"Mortgage\" value={this.state.itemName} onChange={this.handleNameChange} />\n                    </label>\n                    <br></br>\n                    <label>\n                        Monthly Cost: $\n                        <input type=\"text\" placeholder=\"1200\" value={this.state.itemValue} onChange={this.handleValueChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                    <div>{this.state.errorMessage}</div>\n                </form>\n\n                <h1>Your monthly expenses:</h1>\n                <ul>\n                    {this.state.budgetedItems.map((item, index) => (\n                        <li key={index}>{item.name}: ${item.monthlyCost}</li>\n                    ))}\n                </ul>\n\n                <h1>Monthly total: ${this.state.monthlyTotal}</h1>\n\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}